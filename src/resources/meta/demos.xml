<?xml version="1.0" encoding="UTF-8"?>
<DemoList>
	<Demo>
		<Name>cling</Name>
		<Github>https://github.com/root-project/cling</Github>
		<Doc>./docs/cling.html</Doc>
		<Codes>
			<Name>help</Name>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> .help</Statement>
				<Result>
Cling (C/C++ interpreter) meta commands usage
All commands must be preceded by a '.', except
for the evaluation statement { }
==============================================================================
Syntax: .Command [arg0 arg1 ... argN]

.L &lt;filename&gt; - Load the given file or library

.(x|X) &lt;filename&gt;[args] - Same as .L and runs a function with
signature: ret_type filename(args)</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> 1+2</Statement>
				<Result>(int) 3</Result>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> 2*3</Statement>
				<Result>(int) 6</Result>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> int i=10</Statement>
				<Result>(int) 10</Result>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> i</Statement>
				<Result>(int) 10</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> #include&lt;stdio.h&gt;</Statement>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> printf("Hello World\n");</Statement>
				<Result>Hello World</Result>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> printf("Hello World\n")</Statement>
				<Result>Hello World
(int) 12</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> #include&lt;iostream&gt;</Statement>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> using namespace std;</Statement>
			</Code>
			<Code>
				<Prompt>[cling]$</Prompt>
				<Statement> cout&lt;&lt;"Hello World\n";</Statement>
				<Result>Hello World</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>.help</Command>
			<Description>Display brief descriptions of all meta-commands.</Description>
		</Usage>
		<Usage>
			<Command>.L libname</Command>
			<Description>Load the given file or library.</Description>
		</Usage>
		<Usage>
			<Command>.rawInput</Command>
			<Description>Toggle on/off raw input.</Description>
		</Usage>
		<Usage>
			<Command>.q</Command>
			<Description>Exits Cling Interpreter.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>gointerpreter</Name>
		<Github>https://github.com/vickeykumar/Go-interpreter</Github>
		<Doc>./docs/gointerpreter.html</Doc>
		<Codes>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> 12312321</Statement>
				<Result>12312321</Result>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> 12+31</Statement>
				<Result>43</Result>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> var i int</Statement>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> i</Statement>
				<Result>0</Result>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> for i:=0; i&lt;10; i++ {
fmt.Println("Hi: ",i)
}</Statement>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> :r</Statement>
				<Result>Hi: 0
Hi: 1
Hi: 2
Hi: 3
Hi: 4
Hi: 5
Hi: 6
Hi: 7
Hi: 8
Hi: 9</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> import "time"</Statement>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> time.Now();</Statement>
				<Result>2018-07-18 22:32:56.18823511 +0530 IST m=+0.000279327</Result>
			</Code>
			<Code>
				<Prompt>go&gt;&gt;</Prompt>
				<Statement> time.Now().Unix();</Statement>
				<Result>1531933384</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>:help</Command>
			<Description>display brief descriptions of all meta-commands.</Description>
		</Usage>
		<Usage>
			<Command>:r, :x</Command>
			<Description>Run as Go File.</Description>
		</Usage>
		<Usage>
			<Command>:c</Command>
			<Description>Clear the session,and Restart.</Description>
		</Usage>
		<Usage>
			<Command>:q</Command>
			<Description>Exits the REPL.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>python</Name>
		<Doc>./docs/python.html</Doc>
		<Codes>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> 12312321</Statement>
				<Result>12312321</Result>
			</Code>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> 12+31</Statement>
				<Result>43</Result>
			</Code>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> i=0</Statement>
			</Code>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> i</Statement>
				<Result>0</Result>
			</Code>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> for i in range(10):
...        print "Hi: ",i</Statement>
			<Result>Hi: 0
Hi: 1
Hi: 2
Hi: 3
Hi: 4
Hi: 5
Hi: 6
Hi: 7
Hi: 8
Hi: 9</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> import time</Statement>
			</Code>
			<Code>
				<Prompt>&gt;&gt;&gt;</Prompt>
				<Statement> time.time()</Statement>
				<Result>1531933100.30023</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>help(object)</Command>
			<Description>display help about the given object.</Description>
		</Usage>
		<Usage>
			<Command>exit() or ctrl-D</Command>
			<Description>Exits the REPL.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>ipython</Name>
		<Doc>./docs/python.html</Doc>
		<Codes>
			<Code>
				<Prompt>In [1]</Prompt>
				<Statement> 12312321</Statement>
				<Result>Out[1]: 12312321</Result>
			</Code>
			<Code>
				<Prompt>In [2]</Prompt>
				<Statement> 12+31</Statement>
				<Result>Out[2]: 43</Result>
			</Code>
			<Code>
				<Prompt>In [3]</Prompt>
				<Statement> i=0</Statement>
			</Code>
			<Code>
				<Prompt>In [4]</Prompt>
				<Statement> i</Statement>
				<Result>Out[4]: 0</Result>
			</Code>
			<Code>
				<Prompt>In [5]</Prompt>
				<Statement> for i in range(10):
...        print "Hi: ",i</Statement>
			<Result>Hi: 0
Hi: 1
Hi: 2
Hi: 3
Hi: 4
Hi: 5
Hi: 6
Hi: 7
Hi: 8
Hi: 9</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>In [6]</Prompt>
				<Statement> import time</Statement>
			</Code>
			<Code>
				<Prompt>In [7]</Prompt>
				<Statement> time.time()</Statement>
				<Result>Out[7]: 1531933100.30023</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>help(object)</Command>
			<Description>display help about the given object.</Description>
		</Usage>
		<Usage>
			<Command>exit or ctrl-D</Command>
			<Description>Exits the REPL.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>ipython3</Name>
		<Doc>./docs/python.html</Doc>
		<Codes>
			<Code>
				<Prompt>In [1]</Prompt>
				<Statement> 12312321</Statement>
				<Result>Out[1]: 12312321</Result>
			</Code>
			<Code>
				<Prompt>In [2]</Prompt>
				<Statement> 12+31</Statement>
				<Result>Out[2]: 43</Result>
			</Code>
			<Code>
				<Prompt>In [3]</Prompt>
				<Statement> i=0</Statement>
			</Code>
			<Code>
				<Prompt>In [4]</Prompt>
				<Statement> i</Statement>
				<Result>Out[4]: 0</Result>
			</Code>
			<Code>
				<Prompt>In [5]</Prompt>
				<Statement> for i in range(10):
...        print("Hi: ",i)</Statement>
			<Result>Hi: 0
Hi: 1
Hi: 2
Hi: 3
Hi: 4
Hi: 5
Hi: 6
Hi: 7
Hi: 8
Hi: 9</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>In [6]</Prompt>
				<Statement> import time</Statement>
			</Code>
			<Code>
				<Prompt>In [7]</Prompt>
				<Statement> time.time()</Statement>
				<Result>Out[7]: 1531933100.30023</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>help(object)</Command>
			<Description>display help about the given object.</Description>
		</Usage>
		<Usage>
			<Command>exit or ctrl-D</Command>
			<Description>Exits the REPL.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>java</Name>
		<Github>https://github.com/javaterminal/tryjshell</Github>
		<Doc>./docs/java.html</Doc>
		<Codes>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> double[] arr = {19, 12.89, 16.5, 200, 13.7};</Statement>
				<Result>arr ==> double[5] { 19.0, 12.89, 16.5, 200.0, 13.7 }</Result>
			</Code>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> double total = 0;</Statement>
				<Result>total ==> 0.0</Result>
			</Code>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> for(int i=0; i&gt;arr.length; i++){
        	total = total + arr[i];
        }</Statement>
			</Code>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> total</Statement>
				<Result>total ==> 262.09</Result>
			</Code>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> System.out.format("The total is: %.3f", total);</Statement>
				<Result>The total is: 262.090 ==> java.io.PrintStream@6267c3bb</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> import java.util.Date;</Statement>
			</Code>
			<Code>
				<Prompt>jshell&gt;</Prompt>
				<Statement> Date date = new Date();</Statement>
				<Result>date ==> Sat Aug 10 08:58:58 GMT 2019</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>/help</Command>
			<Description>shows this help.</Description>
		</Usage>
		<Usage>
			<Command>/reset</Command>
			<Description>reset the shell.</Description>
		</Usage>
		<Usage>
			<Command>/open</Command>
			<Description>open a source file.</Description>
		</Usage>
		<Usage>
			<Command>/save</Command>
			<Description>save snippet source to a file.</Description>
		</Usage>
		<Usage>
			<Command>/exit</Command>
			<Description>quit the REPL.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>bash</Name>
		<Codes>
			<Code>
				<Prompt>bash$</Prompt>
				<Statement> NAME="John"</Statement>
			</Code>
			<Code>
				<Prompt>bash$</Prompt>
				<Statement> echo "Hello $NAME!"</Statement>
				<Result>Hello John</Result>
			</Code>
			<Code>
				<Prompt>bash$</Prompt>
				<Statement> get_name() {
  echo "John"
}</Statement>
			</Code>
			<Code>
				<Prompt>bash$</Prompt>
				<Statement> echo "You are $(get_name)"</Statement>
				<Result>You are John</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>bash$</Prompt>
				<Statement> for i in {1..5}; do
    echo "Welcome $i"
done</Statement>
				<Result>Welcome 1
Welcome 2
Welcome 3
Welcome 4
Welcome 5</Result>
			</Code>
		</Codes>
		<Usage>
			<Command>help</Command>
			<Description>shows brief description of bash commands.</Description>
		</Usage>
		<Usage>
			<Command>exit</Command>
			<Description>exits the bash.</Description>
		</Usage>
	</Demo>

	<Demo>
		<Name>irb</Name>
		<Doc>https://www.ruby-lang.org/en/documentation/quickstart/</Doc>
		<Codes>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> "Hello World"</Statement>
				<Result>=> "Hello World"</Result>
			</Code>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> puts "Hello World"</Statement>
				<Result>Hello World &lt;br&gt;=> nil</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> a = 3 ** 2</Statement>
				<Result>=> 9</Result>
			</Code>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> b = 4 ** 2</Statement>
				<Result>=> 16</Result>
			</Code>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> Math.sqrt(a+b)</Statement>
				<Result>=> 5.0</Result>
			</Code>
		</Codes>
		<Codes>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> for a in 1..5 do</Statement>
			</Code>
			<Code>
				<Prompt>irb(main):001:0*</Prompt>
				<Statement> puts "hello #{a}!"</Statement>
			</Code>
			<Code>
				<Prompt>irb(main):001:0&gt;</Prompt>
				<Statement> end</Statement>
				<Result>hello 1!
hello 2!
hello 3!
hello 4!
hello 5!
=> 1..5</Result>
			</Code>
		</Codes>

		<Usage>
			<Command>help</Command>
			<Description>shows help.</Description>
		</Usage>
		<Usage>
			<Command>exit</Command>
			<Description>quit the REPL.</Description>
		</Usage>
	</Demo>
</DemoList>
